apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply from: "../common-methods.gradle"

def COMPILE_SDK_VERSION = 27
def BUILD_TOOLS_VERSION = '27.0.2'

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

dependencies {
    api project(':AndroidSDKCore')
    api project(':AndroidSDKLocation')
    api project(':AndroidSDKPush')
    api project(':AndroidSDKGcm')
    api project(':AndroidSDKFcm')
    api project(':AndroidSDKLocation')
}

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION
//    publishNonDefault true

    defaultConfig {
        consumerProguardFiles 'consumer-proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}



def libraryGroupId = 'com.leanplum'
def libraryArtifactId = 'Leanplum'
def libraryVersion = "$System.env.ANDROID_VERSION_STRING"

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/jar/')
    include('classes.jar')
    rename('classes.jar', 'AndroidSDK-release.jar')
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId libraryGroupId
            version libraryVersion
            artifactId libraryArtifactId

            println("->->-> publish.aar() groupId: " + groupId + ", artifact " + artifactId + ", version: " + version )

            artifact("$buildDir/outputs/aar/AndroidSDK-release.aar")

            // The publication doesn't know about our dependencies,
            // so we have to manually add them to the pom.
            pomCreation(libraryGroupId,libraryVersion,pom)
        }
        jar(MavenPublication) {
            groupId libraryGroupId
            version libraryVersion
            artifactId libraryArtifactId

            artifact("$buildDir/outputs/jar/AndroidSDK-release.jar")

            // The publication doesn't know about our dependencies,
            // so we have to manually add them to the pom.
            pomCreation(libraryGroupId,libraryVersion,pom)
        }
    }
}

println("->->-> Properties" )
def i = 0
project.properties.each {
    println(" -> " + i + ": " + it.key + ": " + it.value)
    i++
}
if (project.hasProperty('artifactoryUsername') && project.hasProperty('artifactoryPassword')) {
    artifactory {
        contextUrl = 'http://artifactory-upload.leanplum.com'
        publish {
            repository {
                repoKey = 'libs-snapshot-local'

                username = artifactoryUsername
                password = artifactoryPassword
            }
            defaults {
                publications('aar', 'jar')
                publishArtifacts = true

                properties = ['qa.level': 'basic', 'q.os': 'android', 'dev.team': 'core']
                publishPom = true
            }
        }
    }
}
